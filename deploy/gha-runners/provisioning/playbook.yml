- hosts: all
  collections:
    - devsec.hardening
  vars:
    ## GitHub Actions runner setup
    github_account: UCL
    github_repo: TLOmodel
    runner_user: gha
    runner_workdir: /mnt/tlo
    python_version: "3.8"
    ## SSH hardening
    ssh_deny_users: "{{ runner_user }}"
    # In Azure VMs connection times out after every ~4.5 minutes, sending this
    # signal every 2 minutes keeps the connection alive.
    ssh_client_alive_interval: "120"

  tasks:

   - name: create github action user
     become: true
     ansible.builtin.user:
       name: "{{ runner_user }}"
       create_home: yes
       home: "/home/{{ runner_user }}"
       shell: /bin/bash

   - name: add deadsnakes ppa
     become: true
     apt_repository:
       repo: ppa:deadsnakes/ppa
       state: present
       update_cache: yes

   - name: install packages from apt
     become: true
     apt:
       name:
         - acl  # https://github.com/georchestra/ansible/issues/55#issuecomment-651043423
         - "python{{ python_version }}"
         - "python{{ python_version }}-distutils"
         - "python{{ python_version }}-venv"
         - python3-pip
         - glibc-tools
         - git-lfs
       state: present

   - name: "Point python3 to python{{ python_version }}"
     become: true
     ansible.builtin.file:
       src: "python{{ python_version }}"
       dest: /usr/bin/python3
       state: link

   - name: install tox
     become: true
     ansible.builtin.shell: "python{{ python_version }} -m pip install tox"
     args:
       creates: /usr/local/bin/tox

   - name: make /mnt writable by everyone
     become: true
     ansible.builtin.file:
       path: "/mnt"
       state: directory
       mode: '1777'

   - name: run github actions runner role
     with_sequence: count="{{ n_runners | default(1) }}"
     include_role:
       name: monolithprojects.github_actions_runner
       apply:
         become: yes
     vars:
       runner_dir: "/opt/actions-runner/{{ item }}"
       runner_name: "{{ ansible_hostname }}-{{ item }}"
       runner_extra_config_args: "--work {{ runner_workdir }}/{{ item }}/_work"
       reinstall_runner: no

  roles:
    - ssh_hardening
