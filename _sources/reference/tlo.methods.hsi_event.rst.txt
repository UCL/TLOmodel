tlo.methods.hsi_event module
============================

.. automodule:: tlo.methods.hsi_event


.. autoclass:: HSI_Event




     **Class attributes:**

     __annotations__ : {'module': 'Module', 'target': 'int', 'TREATMENT_ID': 'str', 'ACCEPTED_FACILITY_LEVEL': 'str', 'BEDDAYS_FOOTPRINT': 'Dict[str, Union[float, int]]', '_received_info_about_bed_days': 'Dict[str, Union[float, int]]', 'expected_time_requests': 'Counter', 'facility_info': 'FacilityInfo'}

     _received_info_about_bed_days : None

     bed_days_allocated_to_this_event : <property object at 0x12481efc0>

     expected_time_requests : {}

     facility_info : None

     healthcare_system : <property object at 0x12497d800>

     sim : <property object at 0x12497d7b0>

     target_is_alive : <property object at 0x12497d760>

     **Functions (defined or overridden in class HSI_Event):**

     .. automethod:: __init__

     .. automethod:: _adjust_facility_level_to_merge_1b_and_2

     .. automethod:: apply

     .. automethod:: did_not_run

     .. automethod:: never_ran

     .. automethod:: post_apply_hook

     .. automethod:: run

     .. automethod:: get_consumables

     .. automethod:: make_beddays_footprint

     .. automethod:: is_all_beddays_allocated

     .. automethod:: make_appt_footprint

     .. automethod:: initialise

     .. automethod:: _check_if_appt_footprint_can_run

     .. automethod:: _return_item_codes_in_dict

     .. automethod:: as_namedtuple








.. autoclass:: HSIEventWrapper

     Bases: :class:`tlo.events.Event`


     **Functions (defined or overridden in class HSIEventWrapper):**

     .. automethod:: __init__

     .. automethod:: run





