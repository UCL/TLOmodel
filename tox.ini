[tox]
min_version = 3.15
requires = 
    tox-conda
    tox-factor
envlist =
    test-{linux,osx,osxarm,win}
    profile-{linux,osx,osxarm,win}
    docs-{linux,osx,osxarm,win}
    spell-{linux,osx}
    check
    codecov
    report
    clean

[testenv]
platform = linux: linux
           osx: darwin
           osxarm: darwin
           win: win32
setenv =
    PYTHONUNBUFFERED=yes
passenv =
    *
conda_spec = linux: {toxinidir}/requirements/conda-dev-linux-64.lock
             osx: {toxinidir}/requirements/conda-dev-osx-64.lock
             osxarm: {toxinidir}/requirements/conda-dev-osx-arm64.lock
             win: {toxinidir}/requirements/conda-dev-win-64.lock

[testenv:test-{linux,osx,osxarm,win}]
commands =
    pytest {posargs:--cov --cov-report=term-missing -vv tests}
    
[testenv:profile-{linux,osx,osxarm,win}]
commands =
    pyinstrument --show='*/tlo/*' --interval=0.1 src/scripts/profiling/scale_run.py --years 5 --show-progress-bar

[testenv:docs-{linux,osx,osxarm,win}]
commands =
    sphinx-apidoc -e -f -o {toxinidir}/docs/reference {toxinidir}/src/tlo
    ; Generate API documentation for TLO methods
    python docs/tlo_methods_rst.py
    ; Generate data sources page
    python docs/tlo_data_sources.py
    ; Generate HSI events listing
    python src/tlo/analysis/hsi_events.py --output-file docs/_hsi_events.rst --output-format rst-list
    python src/tlo/analysis/hsi_events.py --output-file docs/hsi_events.csv --output-format csv
    sphinx-build {posargs:-E} -b html docs dist/docs
    -sphinx-build -b linkcheck docs dist/docs

[testenv:spell-{linux,osx}]
conda_spec = linux: {toxinidir}/requirements/conda-docs-linux-64.lock
             osx: {toxinidir}/requirements/conda-docs-osx-64.lock
setenv =
    SPELLCHECK=1
skip_install = true
commands =
    sphinx-build -b spelling docs dist/docs

[testenv:check]
deps =
    docutils
    check-manifest
    flake8
    pygments
    isort
    twine
skip_install = true
commands =
    python setup.py sdist --formats=gztar
    twine check dist/*.tar.gz
    check-manifest {toxinidir}
    flake8 src tests setup.py
    isort --check-only --diff src tests setup.py

[testenv:codecov]
deps = codecov
skip_install = true
commands =
    coverage xml --ignore-errors
    codecov []

[testenv:report]
deps = coverage
skip_install = true
commands =
    coverage report
    coverage html

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase
